#
# Copyright (c) 2016, David Stutz 
# Contact: david.stutz@rwth-aachen.de, davidstutz.de
# All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without modification,
# are permitted provided that the following conditions are met:
# 
# 1. Redistributions of source code must retain the above copyright notice,
#    this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 
# 3. Neither the name of the copyright holder nor the names of its contributors
#    may be used to endorse or promote products derived from this software
#    without specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
cmake_minimum_required (VERSION 2.8)
project (minerals_superpixel)

find_package(Glog REQUIRED)
find_package(OpenCV REQUIRED)
find_package(Boost COMPONENTS system filesystem program_options timer chrono REQUIRED)

include_directories(${OpenCV_INCLUDE_DIRS}
    ${Boost_INCLUDE_DIRS} 
    ${GLOG_INCLUDE_DIRS}
)
add_library(eval
    io_util.cpp
    superpixel_tools.cpp
    evaluation.cpp 
    visualization.cpp
    evaluation_summary.cpp
    parameter_optimization_tool.cpp
    depth_tools.cpp
    transformation.cpp
    robustness_tool.cpp

    connected_components.h
    depth_tools.h
    evaluation.h
    evaluation_summary.h
    io_util.h
    parameter_optimization_tool.h
    robustness_tool.h
    superpixel_tools.h
    transformation.h
    visualization.h
)

add_executable(example_evaluation example_evaluation.cpp)
target_link_libraries(example_evaluation eval ${Boost_LIBRARIES} ${OpenCV_LIBRARIES})

target_link_libraries(eval
    ${OpenCV_LIBRARIES}
    ${Boost_LIBRARIES} 
    ${GLOG_LIBRARIES}
)
